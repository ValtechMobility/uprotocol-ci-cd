# ********************************************************************************
#  Copyright (c) 2024 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  SPDX-License-Identifier: Apache-2.0
# *******************************************************************************/

# Test all feature combinations on a range of OS platforms

name: Matrix-test

on:
  workflow_call:

env:
  RUST_TOOLCHAIN: ${{ vars.RUST_TOOLCHAIN || 'stable' }}
  RUSTFLAGS: -Dwarnings
  CARGO_TERM_COLOR: always

jobs:
  test-all-features:
    name: all feature combinations
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-all-features
        run: |
          cargo install cargo-all-features

      - name: Show toolchain information
        working-directory: ${{ github.workspace }}
        run: |
          rustup toolchain list
          cargo --version

      - name: Install and start Colima
        if: runner.os == 'macOS'
        run: |
          brew install podman
          podman machine init --cpus 1 --memory 2048 --disk-size 10 --now --vmtype vz
          # Wait for machine to be ready
          timeout=0
          echo "Waiting for Podman machine to be ready..."
          while ! podman machine ssh true 2>/dev/null; do
            if [ $timeout -gt 60 ]; then
              echo "Podman machine failed to start within 60 seconds"
              exit 1
            fi
            sleep 1
            timeout=$((timeout + 1))
          done
          ln -sf $(which podman) /usr/local/bin/docker
          podman ps # verify it's working

      - name: cargo-check all possible feature combinations
        run: |
          cargo check-all-features
      - name: cargo-test all possible feature combinations
        run: |
          cargo test-all-features

  # Alternative to the full feature matrix tested in the step above - somewhat faster...
  # multi-os-nextest:
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     NEXTEST_EXPERIMENTAL_LIBTEST_JSON: 1
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macOS-latest]
  #       feature-flags: ["", "--no-default-features", "--all-features"]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: dtolnay/rust-toolchain@master
  #       with:
  #         toolchain: ${{ env.RUST_TOOLCHAIN }}
  #     - uses: Swatinem/rust-cache@v2
  #     - uses: taiki-e/install-action@nextest
  #     - name: Run cargo nextest
  #       run: |
  #         cargo nextest run --message-format libtest-json-plus ${{ matrix.feature-flags }}
